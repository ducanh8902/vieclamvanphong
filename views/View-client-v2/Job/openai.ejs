<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <link rel="icon" type="image/png" sizes="16x16" href="/icon_officejob/meo_2.png">
  <link href="https://admin.tuyendung.me/vendor/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet">
  <link href="https://admin.tuyendung.me/css/style.css" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta property="fb:app_id" content="1902832553257404" />
    <meta property="og:image" content="./icon_officejob/meo_1.png" />
    <meta property="og:image:alt" content="OfficeJob OpenAI" />
    <meta property="og:description" content="OpenAI ">
    <meta property="og:url" content="https://tuyendung.me/openai">
    <meta property="og:title" content="Open AI" />
    <meta property="og:type" content="website" />
    <script src="jquery.js"></script>
  <title>OPEN AI</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      scroll-behavior: smooth;
    }

    :root {
      font-size: 62.5%;
      /* 1rem = 10px */
      --bg-color: #1a1924;
      --font-color: #e1e1e6;
      --primary-color: #00b37e;
      --secondary-color: #633bbc;
      --message-color: #07847e;
      --block-color: #282843;
    }

    body {
      background-color: #3b3363;
      font-size: 2.6rem;
      color: var(--font-color);
      height: 100vh;
      overflow: hidden;
    }

    body * {
      /* border: 0.1rem solid red; */
      font-family: "Roboto", sans-serif;
    }

    #app {
      padding: 2.4rem 3.2rem;
      height: 100vh;
      width: 100vw;
      max-width: 880px;
      display: grid;
      grid-template-rows: max-content 1fr max-content;
      margin: auto;
    }
    #top {
      margin-top: 20%;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    #user-info {
      display: flex;
      align-items: center;
      gap: 1.6rem;
    }

    #user-info img {
      width: 8.0rem;
      height: 8.0rem;
      object-fit: cover;
      border-radius: 50%;
    }

    #user-status .status {
      display: flex;
      align-items: baseline;
      gap: 0.4rem;

      margin-top: 0.4rem;
    }

    #user-status .status::before {
      content: "";
      width: 0.8rem;
      height: 0.8rem;
      display: block;
      background-color: var(--primary-color);
      border-radius: 50%;
    }

    #user-status .status {
      color: var(--primary-color);
      font-size: 1.2rem;
    }

    #last-seen {
      margin-top: 2.6rem;
      font-size: 1.2rem;
      line-height: 1.4rem;
      text-align: center;
    }

    #messages {
      overflow-y: scroll;
      padding-bottom: 2.4rem;
    }

    #messages::-webkit-scrollbar {
      display: none;
    }

    .messages {
      margin-top: 3rem;
      display: grid;
      gap: 3rem;
      font-size: 2.2rem;
    line-height: 2.4rem;
    }

    .message .body {
      width: 40vh;
      margin-top: 1rem;
      background-color: var(--secondary-color);
      padding: 1.4rem;
      border-radius: 0 0.8rem 0.8rem 0.8rem;
    }

    .message:not(.you) {
      width: 40vw;
    }

    .message.you {
      margin-left: auto;
    }

    .message.you .top {
      text-align: right;
    }

    .message.you .body {
      background-color: var(--message-color);
      border-radius: 0.8rem 0.8rem 0 0.8rem;
    }

    #bottom {
      display: flex;
      align-items: center;
      background: var(--block-color);
      border-radius: 15px;
      padding: 1.4rem 2.4rem;
    }

    input {
      flex: 1;
      outline: none;
      color: var(--font-color);
    }

    #bottom:focus-within {
      outline: 2px solid var(--font-color);
    }

    input::placeholder {
      color: var(--font-color);
      font-size: 1.2rem;
      line-height: 1.4rem;
    }

    button i {
      color: var(--font-color);
      font-size: 2.4rem;
    }

    input,
    button {
      background-color: transparent;
      border: 0;
    }
  </style>
</head>

<body>
  <div id="app">
    <div id="top">
      <div id="user-info">
        <img src="./icon_officejob/meo_1.png"
          alt="OpenAI" />
        <div id="user-status">
          <strong>OpenAI OfficeJob</strong>
          <div class="status">Online</div>
        </div>
      </div>
      <div id="close-chat">
        <i class="ph-x-fill"></i>
      </div>
    </div>
    <div id="messages">
      <div class="messages">
        <div class="message">
          
        </div>
        <div class="message you">
          
        </div>
        <div class="message">
         
        </div>
        <div class="message you">
         
        </div>
      </div>
    </div>
    <div style="
    align-items: center;
    background: var(--block-color);
    border-radius: 15px;
    padding: 1.2rem 2.2rem;" class="row">
      <div class="col-lg-9">
        <input style="font-size: 1.8rem;" type="text" placeholder="Câu hỏi của bạn" id="inputQuestion"  />
      </div>
      <div style="text-align: right;" class="col-lg-3">
        <button style="width: 100%;font-size: 1.8rem;"  id="btn_click" class="btn btn-primary" type="submit"> Send</button>
      </div>
    </div>
  </div>
  <script>
    

    const inputQuestion = document.getElementById("inputQuestion");
    const result = document.getElementById("result");
    const messages = document.querySelector(".messages");

    messages.lastElementChild.scrollIntoView();
    inputQuestion.focus();
    inputQuestion.addEventListener("keypress", (event) => {
    if (inputQuestion.value && event.key === "Enter") SendQuestion();
  });
    $("#btn_click").click(function(){
      SendQuestion()
    })
    const OPENAI_API_KEY = "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";
    const url = "https://api.openai.com/v1/completions";

    async function SendQuestion() {
      let question = inputQuestion.value;

      inputQuestion.value = "Đợi xíu....";
      inputQuestion.disabled = true;
      mountMsg("Người Dùng", question, "you");
      let options = {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
          Authorization: "Bearer " + OPENAI_API_KEY,
        },
        body: JSON.stringify({
          model: "text-davinci-003",
          prompt: question,
          max_tokens: 2048, // reply message size
          temperature: 0.5, // creativity in the answer
        }),
      };
      let json = await fetchApi(url, options);
      mountMsg(`OpenAI`, json.choices[0].text);
      inputQuestion.value = "";
      inputQuestion.disabled = false;
      inputQuestion.focus();
    }

    function mountMsg(author, msg, extraClass = "none") {
      const newMessage = document.createElement("div");
      newMessage.classList.add("message", extraClass);

      const top = document.createElement("div");
      top.classList.add("top");
      top.textContent = `${author} - ${timeNow()}`;
      newMessage.appendChild(top);

      const body = document.createElement("div");
      body.classList.add("body");
      body.textContent = msg;
      newMessage.appendChild(body);

      messages.appendChild(newMessage);

      messages.lastElementChild.scrollIntoView();
    }

    async function fetchApi(url, options) {
      let response = await fetch(url, options);
      let result = await response.json();
      return result;
    }

    const timeNow = (input = Date.now()) =>
      new Date(input).toLocaleTimeString("en", { timeStyle: "short" });

  </script>
</body>

</html>

